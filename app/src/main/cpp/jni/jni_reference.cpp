/* DO NOT EDIT THIS FILE - it is machine generated */
#include <base.h>
/* Header for class com_example_ndk_jni_JniReference */

#ifndef _Included_com_example_ndk_jni_JniReference
#define _Included_com_example_ndk_jni_JniReference
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_example_ndk_jni_JniReference
 * Method:    errorCacheLocalReference
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL
Java_com_example_ndk_jni_JniReference_errorCacheLocalReference
        (JNIEnv *env, jobject clazz) {
    // 局部引用， 在方法执行完成之后会自动释放
    // 但是如果定义过多的局部引用，如超过 512 阈值，可以会直接抛错
    // 因此局部引用如果能够提前手动提前释放就提前释放掉
    jclass localRefs = env->FindClass("java/lang/String");
    jmethodID mid = env->GetMethodID(localRefs, "<init>", "(Ljava/lang/String;)V");
    jstring str = env->NewStringUTF("hello local ref...");

    for (int i = 0; i < 1000; ++i) {
        jclass cls = env->FindClass("java/lang/String");
        // 释放掉局部引用
        env->DeleteLocalRef(cls);
    }

    if (env->ExceptionCheck()) {
        env->ExceptionDescribe();
        env->ExceptionClear();
        return str;
    }

    // return str;
    return static_cast<jstring>(env->NewObject(localRefs, mid, str));
}


/*
 * Class:     com_example_ndk_jni_JniReference
 * Method:    cacheWithGlobalReference
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL
Java_com_example_ndk_jni_JniReference_cacheWithGlobalReference
        (JNIEnv *env, jobject clazz) {
    // 全局引用
    static jclass strClazz = nullptr;
    if (strClazz == nullptr) {
        jclass cls = env->FindClass("java/lang/String");
        strClazz = static_cast<jclass>(env->NewGlobalRef(cls));
        env->DeleteLocalRef(cls);
    } else {
        LOGE("use cached...");
    }
    jmethodID mid = env->GetMethodID(strClazz, "<init>", "(Ljava/lang/String;)V");
    jstring str = env->NewStringUTF("hello global ref...");

    return static_cast<jstring>(env->NewObject(strClazz, mid, str));
}

/*
 * Class:     com_example_ndk_jni_JniReference
 * Method:    useWeakGlobalReference
 * Signature: ()V
 */
JNIEXPORT jstring JNICALL
Java_com_example_ndk_jni_JniReference_useWeakGlobalReference
        (JNIEnv *env, jobject clazz) {
    // 全局引用
    static jclass strClazz = nullptr;
    if (strClazz == nullptr) {
        jclass cls = env->FindClass("java/lang/String");
        strClazz = static_cast<jclass>(env->NewWeakGlobalRef(cls));
        env->DeleteLocalRef(cls);
    } else {
        LOGE("use cached...");
    }
    jmethodID mid = env->GetMethodID(strClazz, "<init>", "(Ljava/lang/String;)V");

    // 如果 strClazz 与 null 相同说明，对象被gc掉了
    jboolean isGc = env->IsSameObject(strClazz, nullptr);
    if (!isGc) {
        jstring str = env->NewStringUTF("hello weak global ref...");
        return static_cast<jstring>(env->NewObject(strClazz, mid, str));
    }
    return env->NewStringUTF("hello weak global ref gc...");
}

#ifdef __cplusplus
}
#endif
#endif
